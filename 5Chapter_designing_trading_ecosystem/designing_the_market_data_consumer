These are the two primary subcomponents when it comes to the design of the market data consumer infrastructure in a market participant's trading system. 

	1) Snapshot and incremental stream synchronizer: The market data consumer needs to have a subcomponent that can be used to subscribe to the snapshot stream in addition to being subscibed to the incremental stream. The updates that continue to come in over the incremental market data stream need to be queued up. Once the full snapshot is received and all incremental updates starting from the sequence number of the last update in the snapshot are also queued up and available, we are done. At this point, the limit order book is reconstructed from the snapshot stream, and all queued-up incremental updates are applied to this book to synchronize/catch up with the exchange. At this point, the consumer can stop consuming data from the snapshot stream and leave the snapshot stream, and only consume data from the incremental stream. The component in the market data consumer infrastructure responsible for this synchronization mechanism is what we will refer to as the snapshot and incremental stream synchronization subcomponent. 

	2) Market data protocol decoder: The other subcomponent is responsible for decoding the stream of data coming in from the snapshot and/or the incremental market data streams. This component translates the data from the exchange feed format to the internal format of the trading strategy framework. This is usually a subset of the fields that the exchange provides and is often normalized across different trading exchanges to make the trading strategy framework independent of exchange specific details. 
