The "MEOrder" struct has the following important data members in it to save the attributes required to represent a single order in the limit order book:

	1) A "ticke_id_" variable of type "TickerId" to represent the instrument that this order corresponds to. 

	2) A "client_id_" variable of type "ClientId" that captures the market participant who owns this order. 

	3) Two "OrderId" sets, as we discussed before - "client_order_id_", which is what the client sent of its order request, and "market_order_id_", which is generated by the matching engine and is unique across all clients. 

	4) "Side side_" to represent whether the order is a buy or sell order. 

	5) A "price_" variable of type "Price" to represent the price of the order. 

	6) "Qty qty_" to represent the quantity of the order that is still active in the order book. 

	7) A "priority_" variable of type "Priority", which, as we discussed before, will represent the exact position f this order in the queue of other "MEOrder" instances with the same "side_" "price_" values. 

	8) The "MEOrder" structure also has two pointers to other "MEOrder" objects. This is beacuse the "MEOrder" objects are also maintained as a douly linked list of orders arranged at price level in the "MEordersAtPrice" structure. 

Additionally, the "OrderHashMap" type is used to represent to hash map, implemented usijng "std::array", where "OrderId" is the key and "MEOrder" is the value. 
We will also define another type, "ClientOrderHashMap", which a hash map, implemented using "std::array" to represent a mapping from "ClientId" to the "OrderHashMap" objects: 

We present the "toString()" method for the "MEOrder" structure. 
